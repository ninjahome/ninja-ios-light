// Objective-C API for talking to github.com/ninjahome/ninja-go/cli_lib/mobile Go package.
//   gobind -lang=objc github.com/ninjahome/ninja-go/cli_lib/mobile
//
// File is generated by gobind. Do not edit.

#ifndef __ChatLib_H__
#define __ChatLib_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class ChatLibCacheItem;
@class ChatLibGroupInfo;
@class ChatLibMobileAPP;
@protocol ChatLibMulticastCallBack;
@class ChatLibMulticastCallBack;
@protocol ChatLibUICallBack;
@class ChatLibUICallBack;
@protocol ChatLibUniCastCallBack;
@class ChatLibUniCastCallBack;

@protocol ChatLibMulticastCallBack <NSObject>
- (BOOL)banTalking:(NSString* _Nullable)groupId banned:(BOOL)banned error:(NSError* _Nullable* _Nullable)error;
- (BOOL)createGroup:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList error:(NSError* _Nullable* _Nullable)error;
- (BOOL)dismisGroup:(NSString* _Nullable)groupId error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gFileMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload size:(long)size name:(NSString* _Nullable)name error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gImageMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gLocationMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId l:(float)l a:(float)a name:(NSString* _Nullable)name time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gTextMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSString* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gVoiceMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload length:(long)length time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)joinGroup:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList newIdList:(NSString* _Nullable)newIdList banTalkding:(BOOL)banTalkding error:(NSError* _Nullable* _Nullable)error;
- (BOOL)kickOutUser:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId kickId:(NSString* _Nullable)kickId error:(NSError* _Nullable* _Nullable)error;
- (BOOL)quitGroup:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId quitId:(NSString* _Nullable)quitId error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)syncGroup:(NSString* _Nullable)groupId;
- (BOOL)syncGroupAck:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner banTalking:(BOOL)banTalking memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ChatLibUICallBack <NSObject>
- (BOOL)banTalking:(NSString* _Nullable)groupId banned:(BOOL)banned error:(NSError* _Nullable* _Nullable)error;
- (BOOL)createGroup:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList error:(NSError* _Nullable* _Nullable)error;
- (BOOL)dismisGroup:(NSString* _Nullable)groupId error:(NSError* _Nullable* _Nullable)error;
- (void)endPointChanged:(NSString* _Nullable)p0;
- (BOOL)fileMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload size:(long)size name:(NSString* _Nullable)name error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gFileMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload size:(long)size name:(NSString* _Nullable)name error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gImageMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gLocationMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId l:(float)l a:(float)a name:(NSString* _Nullable)name time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gTextMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSString* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gVoiceMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload length:(long)length time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)imageMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)joinGroup:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList newIdList:(NSString* _Nullable)newIdList banTalkding:(BOOL)banTalkding error:(NSError* _Nullable* _Nullable)error;
- (BOOL)kickOutUser:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId kickId:(NSString* _Nullable)kickId error:(NSError* _Nullable* _Nullable)error;
- (void)licenseChanged:(int64_t)p0 p1:(NSError* _Nullable)p1;
- (BOOL)locationMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to l:(float)l a:(float)a name:(NSString* _Nullable)name time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (void)msgResult:(int64_t)p0 p1:(NSString* _Nullable)p1 p2:(BOOL)p2;
- (BOOL)quitGroup:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId quitId:(NSString* _Nullable)quitId error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)syncGroup:(NSString* _Nullable)groupId;
- (BOOL)syncGroupAck:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner banTalking:(BOOL)banTalking memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList error:(NSError* _Nullable* _Nullable)error;
- (BOOL)textMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSString* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)voiceMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload length:(long)length time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (void)webSocketClosed;
- (void)webSocketDidOnline;
@end

@protocol ChatLibUniCastCallBack <NSObject>
- (BOOL)fileMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload size:(long)size name:(NSString* _Nullable)name error:(NSError* _Nullable* _Nullable)error;
- (BOOL)imageMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)locationMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to l:(float)l a:(float)a name:(NSString* _Nullable)name time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)textMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSString* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)voiceMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload length:(long)length time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (void)webSocketClosed;
- (void)webSocketDidOnline;
@end

@interface ChatLibCacheItem : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) int64_t id_;
@end

@interface ChatLibGroupInfo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull groupId;
@property (nonatomic) NSString* _Nonnull groupName;
@property (nonatomic) NSString* _Nonnull ownerId;
@property (nonatomic) BOOL banTalking;
// skipped field GroupInfo.MemberId with unsupported type: []string

// skipped field GroupInfo.NickName with unsupported type: []string

@end

@interface ChatLibMobileAPP : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field MobileAPP.RWMutex with unsupported type: sync.RWMutex

// skipped method MobileAPP.ImmediateGMessage with unsupported parameter or return types

// skipped method MobileAPP.ImmediateMessage with unsupported parameter or return types

- (BOOL)isOnline;
- (void)lock;
// skipped method MobileAPP.NoRightTips with unsupported parameter or return types

- (BOOL)online:(NSError* _Nullable* _Nullable)error;
- (void)onlineSuccess;
- (void)rLock;
// skipped method MobileAPP.RLocker with unsupported parameter or return types

- (void)rUnlock;
- (void)unlock;
- (void)webSocketClosed;
@end

// skipped const MsgFailedThreshold with unsupported type: time.Duration

FOUNDATION_EXPORT const int64_t ChatLibNoRightCodeNo;

FOUNDATION_EXPORT BOOL ChatLibActiveWallet(NSString* _Nullable cipherTxt, NSString* _Nullable auth, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT int64_t ChatLibIconIndex(NSString* _Nullable id_, long mod);

FOUNDATION_EXPORT void ChatLibInitAPP(NSString* _Nullable endPoint, id<ChatLibUICallBack> _Nullable call, NSString* _Nullable devToken, long devType, BOOL debug);

FOUNDATION_EXPORT BOOL ChatLibIsValidNinjaAddr(NSString* _Nullable addr);

FOUNDATION_EXPORT NSString* _Nonnull ChatLibNewGroupId(void);

FOUNDATION_EXPORT NSString* _Nonnull ChatLibNewWallet(NSString* _Nullable auth);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackBanTalking(NSString* _Nullable owner, NSString* _Nullable groupId, BOOL banned);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackCreateGroup(NSString* _Nullable nickNames, NSString* _Nullable groupId, NSString* _Nullable groupName);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackDismissGroup(NSString* _Nullable owner, NSString* _Nullable groupId);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackFile(NSData* _Nullable payload, long size, NSString* _Nullable name);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackGroupFile(NSString* _Nullable groupId, NSString* _Nullable name, NSData* _Nullable payload, long size);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackGroupImage(NSString* _Nullable groupId, NSData* _Nullable payload);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackGroupLocation(NSString* _Nullable groupId, NSString* _Nullable name, float longitude, float latitude);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackGroupTxt(NSString* _Nullable groupId, NSString* _Nullable plainTxt);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackGroupVoice(NSString* _Nullable groupId, NSData* _Nullable payload, long length);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackImage(NSData* _Nullable payload);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackJoinGroup(NSString* _Nullable nickNames, NSString* _Nullable groupId, NSString* _Nullable groupName, NSString* _Nullable groupOwner, BOOL banTalking, NSString* _Nullable newIds);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackKickOutUser(NSString* _Nullable groupId, NSString* _Nullable owner, NSString* _Nullable kickUserId);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackLocation(float longitude, float latitude, NSString* _Nullable name);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackPlainTxt(NSString* _Nullable plainTxt);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackQuitGroup(NSString* _Nullable groupId);

FOUNDATION_EXPORT NSData* _Nullable ChatLibPackVoice(NSData* _Nullable payload, long len);

FOUNDATION_EXPORT void ChatLibReloadLicense(int64_t old);

FOUNDATION_EXPORT void ChatLibSend(int64_t msgID, NSString* _Nullable to, NSData* _Nullable data, BOOL isGrp);

FOUNDATION_EXPORT BOOL ChatLibSyncGroup(NSString* _Nullable to, NSString* _Nullable groupId, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL ChatLibTransferLicense(NSString* _Nullable toAddr, long nDays, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable ChatLibUnmarshalGoByte(NSString* _Nullable s);

FOUNDATION_EXPORT NSString* _Nonnull ChatLibVersion(void);

FOUNDATION_EXPORT void ChatLibWSOffline(void);

FOUNDATION_EXPORT BOOL ChatLibWSOnline(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull ChatLibWalletAddress(void);

FOUNDATION_EXPORT BOOL ChatLibWalletIsOpen(void);

@class ChatLibMulticastCallBack;

@class ChatLibUICallBack;

@class ChatLibUniCastCallBack;

@interface ChatLibMulticastCallBack : NSObject <goSeqRefInterface, ChatLibMulticastCallBack> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)banTalking:(NSString* _Nullable)groupId banned:(BOOL)banned error:(NSError* _Nullable* _Nullable)error;
- (BOOL)createGroup:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList error:(NSError* _Nullable* _Nullable)error;
- (BOOL)dismisGroup:(NSString* _Nullable)groupId error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gFileMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload size:(long)size name:(NSString* _Nullable)name error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gImageMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gLocationMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId l:(float)l a:(float)a name:(NSString* _Nullable)name time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gTextMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSString* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gVoiceMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload length:(long)length time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)joinGroup:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList newIdList:(NSString* _Nullable)newIdList banTalkding:(BOOL)banTalkding error:(NSError* _Nullable* _Nullable)error;
- (BOOL)kickOutUser:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId kickId:(NSString* _Nullable)kickId error:(NSError* _Nullable* _Nullable)error;
- (BOOL)quitGroup:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId quitId:(NSString* _Nullable)quitId error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)syncGroup:(NSString* _Nullable)groupId;
/**
 * same as CreateGroup
 */
- (BOOL)syncGroupAck:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner banTalking:(BOOL)banTalking memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList error:(NSError* _Nullable* _Nullable)error;
@end

@interface ChatLibUICallBack : NSObject <goSeqRefInterface, ChatLibUICallBack> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)banTalking:(NSString* _Nullable)groupId banned:(BOOL)banned error:(NSError* _Nullable* _Nullable)error;
- (BOOL)createGroup:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList error:(NSError* _Nullable* _Nullable)error;
- (BOOL)dismisGroup:(NSString* _Nullable)groupId error:(NSError* _Nullable* _Nullable)error;
- (void)endPointChanged:(NSString* _Nullable)p0;
- (BOOL)fileMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload size:(long)size name:(NSString* _Nullable)name error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gFileMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload size:(long)size name:(NSString* _Nullable)name error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gImageMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gLocationMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId l:(float)l a:(float)a name:(NSString* _Nullable)name time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gTextMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSString* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)gVoiceMessage:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId payload:(NSData* _Nullable)payload length:(long)length time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)imageMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)joinGroup:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList newIdList:(NSString* _Nullable)newIdList banTalkding:(BOOL)banTalkding error:(NSError* _Nullable* _Nullable)error;
- (BOOL)kickOutUser:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId kickId:(NSString* _Nullable)kickId error:(NSError* _Nullable* _Nullable)error;
- (void)licenseChanged:(int64_t)p0 p1:(NSError* _Nullable)p1;
- (BOOL)locationMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to l:(float)l a:(float)a name:(NSString* _Nullable)name time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (void)msgResult:(int64_t)p0 p1:(NSString* _Nullable)p1 p2:(BOOL)p2;
- (BOOL)quitGroup:(NSString* _Nullable)from groupId:(NSString* _Nullable)groupId quitId:(NSString* _Nullable)quitId error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)syncGroup:(NSString* _Nullable)groupId;
- (BOOL)syncGroupAck:(NSString* _Nullable)groupId groupName:(NSString* _Nullable)groupName owner:(NSString* _Nullable)owner banTalking:(BOOL)banTalking memberIdList:(NSString* _Nullable)memberIdList memberNickNameList:(NSString* _Nullable)memberNickNameList error:(NSError* _Nullable* _Nullable)error;
- (BOOL)textMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSString* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)voiceMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload length:(long)length time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (void)webSocketClosed;
- (void)webSocketDidOnline;
@end

@interface ChatLibUniCastCallBack : NSObject <goSeqRefInterface, ChatLibUniCastCallBack> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)fileMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload size:(long)size name:(NSString* _Nullable)name error:(NSError* _Nullable* _Nullable)error;
- (BOOL)imageMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)locationMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to l:(float)l a:(float)a name:(NSString* _Nullable)name time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)textMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSString* _Nullable)payload time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (BOOL)voiceMessage:(NSString* _Nullable)from to:(NSString* _Nullable)to payload:(NSData* _Nullable)payload length:(long)length time:(int64_t)time error:(NSError* _Nullable* _Nullable)error;
- (void)webSocketClosed;
- (void)webSocketDidOnline;
@end

#endif
